<?php

/**
 * BaseDonateAnnual
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $project
 * @property string $will
 * @property string $amount
 * @property string $donor
 * @property integer $user_id
 * @property string $sex
 * @property string $birthday
 * @property string $birthplace
 * @property string $speciality
 * @property string $company
 * @property string $address
 * @property string $zipcode
 * @property string $tel
 * @property string $mobile
 * @property string $email
 * @property string $provinces
 * @property string $methods
 * @property integer $payment_status
 * @property timestamp $donate_at
 * @property integer $mingyi
 * @property string $message
 * @property integer $graduation_year
 * @property string $billno
 * @property string $ipsbillno
 * @property User $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDonateAnnual extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('donate_annual');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('project', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('will', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('amount', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('donor', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('sex', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('birthday', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('birthplace', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('speciality', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('company', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('zipcode', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('tel', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('mobile', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('provinces', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('methods', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('payment_status', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('donate_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('mingyi', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('message', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('graduation_year', 'integer', 6, array(
             'type' => 'integer',
             'length' => '6',
             ));
        $this->hasColumn('billno', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('ipsbillno', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}
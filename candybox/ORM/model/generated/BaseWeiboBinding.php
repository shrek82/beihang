<?php

/**
 * BaseWeiboBinding
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $aa_id
 * @property integer $user_id
 * @property string $service
 * @property string $access_token
 * @property string $weibo_services
 * @property string $description
 * @property timestamp $binding_date
 * @property integer $uid
 * @property string $screen_name
 * @property string $name
 * @property integer $province
 * @property integer $city
 * @property integer $location
 * @property string $url
 * @property string $profile_image_url
 * @property string $domain
 * @property string $gender
 * @property integer $followers_count
 * @property integer $friends_count
 * @property integer $statuses_count
 * @property integer $favourites_count
 * @property timestamp $create_at
 * @property timestamp $update_at
 * @property boolean $verified
 * @property boolean $allow_all_comment
 * @property string $avatar_large
 * @property User $User
 * @property Aa $Aa
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWeiboBinding extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('weibo_binding');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('aa_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('service', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('access_token', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('weibo_services', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('binding_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('uid', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('screen_name', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('province', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('city', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('location', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('url', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('profile_image_url', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('domain', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('gender', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('followers_count', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('friends_count', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('statuses_count', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('favourites_count', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('create_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('update_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('verified', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('allow_all_comment', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('avatar_large', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Aa', array(
             'local' => 'aa_id',
             'foreign' => 'id'));
    }
}
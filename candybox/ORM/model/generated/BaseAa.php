<?php

/**
 * BaseAa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $ename
 * @property integer $group
 * @property string $sname
 * @property string $range
 * @property string $class
 * @property string $zip
 * @property string $address
 * @property string $tel
 * @property string $fax
 * @property string $contacts
 * @property string $website
 * @property string $email
 * @property date $found_at
 * @property string $intro
 * @property integer $order_num
 * @property string $weibo
 * @property string $institute_speciality_key
 * @property string $notice
 * @property boolean $is_need_verify
 * @property Doctrine_Collection $Infos
 * @property Doctrine_Collection $Members
 * @property Doctrine_Collection $AaVisits
 * @property Doctrine_Collection $Albums
 * @property Doctrine_Collection $WeiboBindings
 * @property Doctrine_Collection $Bbses
 * @property BbsUnit $Units
 * @property Doctrine_Collection $Clubs
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $NewsCategorys
 * @property Doctrine_Collection $Shows
 * @property Doctrine_Collection $Themes
 * @property Doctrine_Collection $Applys
 * @property Doctrine_Collection $Votes
 * @property Doctrine_Collection $AaWeibos
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAa extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('aa');
        $this->hasColumn('id', 'integer', 3, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '3',
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('ename', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('group', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));
        $this->hasColumn('sname', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('range', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('class', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('tel', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('fax', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('contacts', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('website', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('found_at', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('intro', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('order_num', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('weibo', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('institute_speciality_key', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('notice', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_need_verify', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AaInfo as Infos', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('AaMember as Members', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('AaVisit as AaVisits', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Album as Albums', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('WeiboBinding as WeiboBindings', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Bbs as Bbses', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasOne('BbsUnit as Units', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Club as Clubs', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Event as Events', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('NewsCategory as NewsCategorys', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Banner as Shows', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Theme as Themes', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('JoinApply as Applys', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('Vote as Votes', array(
             'local' => 'id',
             'foreign' => 'aa_id'));

        $this->hasMany('AaWeibo as AaWeibos', array(
             'local' => 'id',
             'foreign' => 'aa_id'));
    }
}
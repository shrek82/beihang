<?php

/**
 * BaseClassBbsUnit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bbs_id
 * @property string $type
 * @property string $title
 * @property integer $user_id
 * @property clob $content
 * @property boolean $is_fixed
 * @property boolean $is_good
 * @property boolean $is_closed
 * @property boolean $is_pic
 * @property boolean $is_limit
 * @property boolean $is_focus
 * @property string $img_path
 * @property integer $hit
 * @property integer $reply_num
 * @property timestamp $create_at
 * @property timestamp $update_at
 * @property timestamp $comment_at
 * @property ClassBbs $ClassBbs
 * @property User $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClassBbsUnit extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('class_bbs_unit');
        $this->hasColumn('id', 'integer', 5, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '5',
             ));
        $this->hasColumn('bbs_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('type', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('title', 'string', 80, array(
             'type' => 'string',
             'length' => '80',
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_fixed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_good', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_closed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_pic', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_limit', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_focus', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('img_path', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('hit', 'integer', 5, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '5',
             ));
        $this->hasColumn('reply_num', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));
        $this->hasColumn('create_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('update_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('comment_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClassBbs', array(
             'local' => 'bbs_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}
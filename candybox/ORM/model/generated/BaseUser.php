<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $alumni_id
 * @property string $account
 * @property string $homepage
 * @property string $nick
 * @property string $student_no
 * @property integer $file_no
 * @property string $speciality
 * @property integer $start_year
 * @property integer $finish_year
 * @property boolean $actived
 * @property string $password
 * @property string $realname
 * @property string $birthday
 * @property string $city
 * @property string $sex
 * @property string $memo
 * @property string $intro
 * @property boolean $authentic
 * @property timestamp $login_time
 * @property integer $login_num
 * @property string $login_clients
 * @property string $device_token
 * @property timestamp $reg_at
 * @property string $role
 * @property string $education
 * @property string $school
 * @property string $institute
 * @property integer $institute_no
 * @property integer $bbs_unit_num
 * @property integer $point
 * @property boolean $is_sended_active
 * @property Ol $Ol
 * @property Doctrine_Collection $AaMembers
 * @property Doctrine_Collection $VoteUsers
 * @property Doctrine_Collection $Pics
 * @property Doctrine_Collection $WeiboBindings
 * @property Doctrine_Collection $Units
 * @property Doctrine_Collection $Applys
 * @property ClassMember $ClassMember
 * @property ClassAbook $ClassAbook
 * @property Doctrine_Collection $ClassBbsUnits
 * @property Doctrine_Collection $ClubMembers
 * @property Comment $Comment
 * @property Doctrine_Collection $Contents
 * @property Doctrine_Collection $DonateStatistics
 * @property Doctrine_Collection $DonateAnnuals
 * @property Doctrine_Collection $DonateFunds
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $Signs
 * @property News $News
 * @property Doctrine_Collection $PubContributes
 * @property UserContact $Contact
 * @property Doctrine_Collection $Edus
 * @property Doctrine_Collection $Works
 * @property UserPrivate $Private
 * @property Doctrine_Collection $Bubbles
 * @property Doctrine_Collection $UserMark
 * @property Doctrine_Collection $Marks
 * @property Doctrine_Collection $UserMsg
 * @property Doctrine_Collection $Msgs
 * @property Doctrine_Collection $Visitors
 * @property Doctrine_Collection $UserPoints
 * @property Doctrine_Collection $UserInvites
 * @property Doctrine_Collection $RUserInvites
 * @property Doctrine_Collection $Votes
 * @property Doctrine_Collection $WeiboContents
 * @property Doctrine_Collection $AaWeibos
 * @property Doctrine_Collection $WeiboTopics
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('alumni_id', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('account', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('homepage', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('nick', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('student_no', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('file_no', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('speciality', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('start_year', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('finish_year', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('actived', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'length' => '32',
             ));
        $this->hasColumn('realname', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('birthday', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('city', 'string', 18, array(
             'type' => 'string',
             'length' => '18',
             ));
        $this->hasColumn('sex', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('memo', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('intro', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('authentic', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('login_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('login_num', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('login_clients', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('device_token', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('reg_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('role', 'string', 16, array(
             'type' => 'string',
             'length' => '16',
             ));
        $this->hasColumn('education', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('school', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('institute', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('institute_no', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('bbs_unit_num', 'integer', 6, array(
             'type' => 'integer',
             'length' => '6',
             ));
        $this->hasColumn('point', 'integer', 6, array(
             'type' => 'integer',
             'length' => '6',
             ));
        $this->hasColumn('is_sended_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ol', array(
             'local' => 'id',
             'foreign' => 'uid'));

        $this->hasMany('AaMember as AaMembers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('AdminLog as VoteUsers', array(
             'local' => 'id',
             'foreign' => 'manager_id'));

        $this->hasMany('Pic as Pics', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('WeiboBinding as WeiboBindings', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('BbsUnit as Units', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('CardApply as Applys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('ClassMember', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('ClassAbook', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ClassBbsUnit as ClassBbsUnits', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ClubMember as ClubMembers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Content as Contents', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DonateStatistics', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DonateAnnual as DonateAnnuals', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DonateFund as DonateFunds', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Event as Events', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('EventSign as Signs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('News', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PubContribute as PubContributes', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('UserContact as Contact', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserEdu as Edus', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserWork as Works', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('UserPrivate as Private', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserBubble as Bubbles', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserMark', array(
             'local' => 'id',
             'foreign' => 'user'));

        $this->hasMany('UserMark as Marks', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserMsg', array(
             'local' => 'id',
             'foreign' => 'send_to'));

        $this->hasMany('UserMsg as Msgs', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserVisitor as Visitors', array(
             'local' => 'id',
             'foreign' => 'visitor_id'));

        $this->hasMany('UserPoint as UserPoints', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserInvite as UserInvites', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserInvite as RUserInvites', array(
             'local' => 'id',
             'foreign' => 'receiver_user_id'));

        $this->hasMany('Vote as Votes', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('WeiboContent as WeiboContents', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('AaWeibo as AaWeibos', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('WeiboTopics', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}
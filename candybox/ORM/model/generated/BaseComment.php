<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $news_id
 * @property integer $event_id
 * @property integer $class_room_id
 * @property integer $bbs_unit_id
 * @property integer $class_unit_id
 * @property integer $pic_id
 * @property integer $bubble_id
 * @property integer $weibo_id
 * @property integer $vote_id
 * @property integer $album_id
 * @property string $content
 * @property timestamp $post_at
 * @property timestamp $update_at
 * @property string $clients
 * @property string $quote_ids
 * @property boolean $is_closed
 * @property integer $score
 * @property ClassRoom $ClassRoom
 * @property News $News
 * @property Event $Event
 * @property BbsUnit $BbsUnit
 * @property User $User
 * @property WeiboContent $WeiboContent
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('id', 'integer', 6, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '6',
             ));
        $this->hasColumn('user_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('news_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('class_room_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('bbs_unit_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('class_unit_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('pic_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('bubble_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('weibo_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('vote_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('album_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('post_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('update_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('clients', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('quote_ids', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_closed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('score', 'integer', 6, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '6',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClassRoom', array(
             'local' => 'class_room_id',
             'foreign' => 'id'));

        $this->hasOne('News', array(
             'local' => 'news_id',
             'foreign' => 'id'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('BbsUnit', array(
             'local' => 'bbs_unit_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('WeiboContent', array(
             'local' => 'weibo_id',
             'foreign' => 'id'));
    }
}